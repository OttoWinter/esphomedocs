MY9231/MY9291 LED driver Component
==================================

The MY9231/MY9291 component represents a MY9231/MY9291 LED diver chain
(`MY9231 description <http://www.my-semi.com.tw/file/MY9231_BF_0.91.pdf>`__,
`MY9291 description <http://www.my-semi.com.tw/file/MY9291_BF_0.91.pdf>`__) in
esphomelib. Communication is done with two GPIO pins (DI and DCKI) and multiple
driver chips can be chained. There are two models with different number of
output channels (MY9291 with 4 channels and MY9231 with 3 channels). They are
popular driver chips used in smart light blubs:

- Sonoff B1 (MY9231)
- Ai-Thinker AiLight WiFi light bulb (MY9291)
- Arilux E27 Smart Bulb (MY9231)

To use the channels of this components, you first need to setup the
global ``my9231`` hub and give it an id, and then define the
:doc:`individual output channels </esphomeyaml/components/output/my9231>`.

.. note::

     One of the features of the MY9231/MY9291 driver is that the chips
     remember their state after a power cycling. Unfortunately, the
     state of the driver can not be read. Therefore, if esphomelib can
     not restore the previous state, it will result in a mismatch of
     the driver output and the internal state (= MQTT state). So you
     can configure the behaviour on boot time:

     ``update_on_boot: True``
       On device power up/boot, the light may flash shortly, to the
       state before powering off.

     ``update_on_boot: False``
       On device power up/boot, the light show the last state, but the
       internal data will not reflect this state. Thus, the first fade
       is wrong, as well as the MQTT state.

.. code:: yaml

    # Example configuration entry
    my9231:
      - data_pin: GPIO12
        clock_pin: GPIO14

    # Individual outputs
    output:
      - platform: my9231
        id: 'my9231_output1'
        channel: 0

Configuration variables:
------------------------

-  **data_pin** (**Required**, :ref:`config-pin_schema`): The pin which DI is connected
   to.
-  **clock_pin** (**Required**, :ref:`config-pin_schema`): The pin which DCKI is
   connected to.
-  **num_channels** (*Optional*, int): Total number of channels of the whole
   chain. Must be in range from 3 to 1020. Defaults to 6.
-  **num_chips** (*Optional*, int): Number of chips in the chain. Must be
   in range from 1 to 255. Defaults to 2.
-  **bit_depths** (*Optional*, int): The bit depth to use for all output
   channels in this chain. Must be one of 8, 12, 14 or 16. Defaults to 16.
-  **update_on_boot** (*Optional*, boolean): Update/reset duty data at boot. Defaults to ``True``.
-  **id** (*Optional*, :ref:`config-id`): The id to use for
   this ``my9231`` component. Use this if you have multiple MY9231/MY9291 chains
   connected at the same time.

See Also
--------

- :doc:`output/my9231`
- :doc:`API Reference </api/output/my9231>`
- `Edit this page on GitHub <https://github.com/OttoWinter/esphomedocs/blob/current/esphomeyaml/components/my9231.rst>`__

.. disqus::
