# Example ESPHome code to emulate stock firmware functionality while maintaining 100% 
# local control through Home Assistant.

substitutions:
  device_name: '<NODE_NAME>'     # used internally.. e.g. teckin_sp20
  friendly_name: '<Node Name>'   # displayed in HA.. e.g. Teckin SP20
  wifi_ssid: '<WIFI_SSID>'
  wifi_password: '<WIFI_PASSWORD>'

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}

# Enable Logs from the device
logger:

# Enable Home Assistant API
api:

# Enable Over-The-Air updates
ota:

# Enable getting local time for total daily energy calculation
time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  - platform: gpio
    pin: GPIO13
    id: button1
    name: ${friendly_name} Button
    on_press:
      - switch.toggle: relay1
    internal: True

switch:
  - platform: gpio
    id: blue_led
    pin:
      number: GPIO0
      inverted: True
    
  - platform: gpio
    pin: GPIO12
    id: relay2
    name: ${friendly_name} USB
    # Tie Blue LED to relay
    on_turn_on:
    - switch.turn_on: blue_led
    on_turn_off:
    - switch.turn_off: blue_led
    
  - platform: gpio
    pin: GPIO15
    id: relay1
    name: ${friendly_name} Plug
    # Tie Blue LED to relay
    on_turn_on:
    - switch.turn_on: blue_led
    on_turn_off:
    - switch.turn_off: blue_led
