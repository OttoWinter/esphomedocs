ATM90E32 Power Sensor
====================

.. seo::
    :description: Instructions for setting up ATM90E32 energy metering sensors
    :image: atm90e32.png
    :keywords: ATM90E32, CircuitSetup, Split Single Phase Real Time Whole House Energy Meter, Expandable 6 Channel ESP32 Energy Meter Main Board

The ``atm90e32`` sensor platform allows you to use your ATM90E32 voltage/current and power sensors
(`datasheet <http://ww1.microchip.com/downloads/en/devicedoc/Atmel-46003-SE-M90E32AS-Datasheet.pdf>`__) sensors with
ESPHome. This sensor is commonly found in CircuitSetup 2 and 6 channel energy meters.

The atm90e32 IC can measure up to three AC voltages although typically only one
voltage measurement would be used for the mains electricity phase of a
household. Three current measurements are read via CT clamps. 

The CircuitSetup Split Single Phase Real Time Whole House Energy Meter can read 2 current channels and one voltage channel.
.. figure:: images/atm90e32-cs-2chan-full.jpg
    :align: center
    :width: 50.0%

    CircuitSetup Split Single Phase Real Time Whole House Energy Meter.

The CircuitSetup Expandable 6 Channel ESP32 Energy Meter can read 6 current channels and 2 voltage channels at a time, this board has two atm90e32 ICs and requires two sensors to be configured in ESPHome.
.. figure:: images/atm90e32-cs-6chan-full.jpg
    :align: center
    :width: 50.0%

    CircuitSetup Expandable 6 Channel ESP32 Energy Meter Main Board.

The IC supports a number of measurements, these are not yet exported by ESPHome
Electrical parameters measurement: Vrms, Irms, mean active/reactive/apparent
power, frequency, power factor and phase angle.
Enhanced event detection: sag, over voltage, phase loss, over current, reverse V/I
phase sequence, calculated neutral line current INC over-current and frequency
upper and lower threshold.

.. code-block:: yaml

    # Example configuration entry
    sensor:
      - platform: atm90e32
        cs_pin: 5
        voltage_a:
          name: "EMON Line Voltage A"
        current_a:
          name: "EMON CT1 Current"
        current_b:
          name: "EMON CT2 Current"
        power:
          name: "EMON Total Active Power CT1-2"
        frequency:
          name: "EMON Line Frequency"
        line_freq: 50Hz
        gain_pga: 2X
        gain_volt_a: 47660
        gain_ct_a: 12577
        gain_ct_b: 12577
        update_interval: 60s

    # Example CS 6-channel entry
    sensor:
      - platform: atm90e32
        cs_pin: 5
        voltage_a:
          name: "EMON Line Voltage A"
        current_a:
          name: "EMON CT1 Current"
        current_b:
          name: "EMON CT2 Current"
        current_c:
          name: "EMON CT3 Current"
        power:
          name: "EMON Total Active Power CT1-3"
        frequency:
          name: "EMON Line Frequency"
        line_freq: 50Hz
        gain_pga: 2X
        gain_volt_a: 47660
        gain_ct_a: 12577
        gain_ct_b: 12577
        gain_ct_c: 12577
        update_interval: 60s
      - platform: atm90e32
        cs_pin: 4
        current_a:
          name: "EMON CT4 Current"
        current_b:
          name: "EMON CT5 Current"
        current_c:
          name: "EMON CT6 Current"
        power:
          name: "EMON Total Active Power CT4-6"
        line_freq: 50Hz
        gain_pga: 2X
        gain_volt_a: 47660
        gain_ct_a: 12577
        gain_ct_b: 12577
        gain_ct_c: 12577
        update_interval: 60s

.. note::

    The gain values must be calibrated for each installation, see instructions at https://github.com/CircuitSetup/Split-Single-Phase-Energy-Meter#calibration. 

Configuration variables:
------------------------

- **cs_pin** (**Required**, :ref:`Pin Schema <config-pin_schema>`): The pin CS is connected to.
- **voltage_a** (*Optional*): Use the channel A voltage value of the sensor in V (RMS).
  All options from :ref:`Sensor <config-sensor>`.
- **voltage_b** (*Optional*): Use the channel B voltage value of the sensor in V (RMS).
  All options from :ref:`Sensor <config-sensor>`.
- **voltage_c** (*Optional*): Use the channel . voltage value of the sensor in V (RMS).
  All options from :ref:`Sensor <config-sensor>`.
- **current_a** (*Optional*): Use the channel A current value of the sensor in amperes. All options from
  :ref:`Sensor <config-sensor>`.
- **current_b** (*Optional*): Use the channel B current value of the sensor in amperes. All options from
  :ref:`Sensor <config-sensor>`.
- **current_c** (*Optional*): Use the channel C current value of the sensor in amperes. All options from
  :ref:`Sensor <config-sensor>`.
- **power** (*Optional*): Use the combined (active) power value of all current channels of the sensor in watts. All options from
  :ref:`Sensor <config-sensor>`.
- **line_freq** (*Required*, string): The AC line frequency of the supply voltage. One of ``50Hz``, ``60Hz``
- **gain_pga** (*Optional*, string): The gain for the CT clamp, ``2X`` for 100A, ``4X`` for 100A - 200A. One of ``1X``, ``2X``, ``4X``.
  Defaults to ``2X`` which is suitable for the popular SCT-013-000 clamp.
- **gain_volt_a** (*Optional*, short): Voltage gain to scale the low voltage AC power pack to household mains feed.
- **gain_ct_a** (*Optional*, short): CT clamp 1 calibration.
- **gain_ct_b** (*Optional*, short): CT clamp 2 calibration.
- **gain_ct_c** (*Optional*, short): CT clamp 3 calibration.
- **update_interval** (*Optional*, :ref:`config-time`): The interval to check the sensor. Defaults to ``60s``.


See Also
--------

- :ref:`sensor-filters`
- :apiref:`atm90e32/atm90e32.h`
- :ghedit:`Edit`
